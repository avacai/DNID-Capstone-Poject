FocuPet Backend

This is the backend service for FocuPet, built with Node.js, Express, and Firebase Firestore.
It provides RESTful APIs for authentication, focus session tracking, pet progression, and narrative unlocks.

🚀 Getting Started
1. Clone the Repository
git clone https://github.com/your-org/focupet-backend.git
cd focupet-backend

2. Install Dependencies
npm install

3. Setup Firebase

Go to Firebase Console
 → create a new project.

Enable Cloud Firestore.

Go to Project Settings → Service Accounts → generate a new private key.

Download the JSON key file and place it in the root directory as:

focupet-backend/serviceAccountKey.json



4. Run the Server
npm start


Server will start on http://localhost:3000.

📂 Project Structure
focupet-backend/
 ├── index.js                # Entry point (starts Express + connects Firebase)
 ├── package.json            # Generated by npm init
 ├── serviceAccountKey.json  # Firebase Admin SDK key (⚠️ Do NOT commit)
 ├── .gitignore              # Ignore node_modules/ and serviceAccountKey.json
 ├── routes/                 # API route definitions
 │    ├── auth.js
 │    ├── session.js
 │    └── pet.js
 ├── controllers/            # Business logic for each module
 │    ├── authController.js
 │    ├── sessionController.js
 │    └── petController.js
 ├── models/                 # Firestore data abstractions (optional)
 │    ├── userModel.js
 │    └── sessionModel.js
 └── utils/                  # Utility functions (Firebase init, helpers, etc.)
      └── firebase.js

🛠️ API Endpoints (examples)
Auth

POST /auth/register → Create new user

POST /auth/login → Login with email/password

Session

POST /session → Record a focus session

GET /session/:userId → Get all sessions for a user

Pet

GET /pet/:userId → Get pet status

POST /pet/update → Update pet stats (level, XP, accessories)

🔒 Security Notes

All requests should use HTTPS in production.

Sensitive data (like serviceAccountKey.json) must never be committed.

Future versions will include authentication middleware (JWT / Google OAuth).

📌 Development Roadmap

 Implement authentication (JWT + Google OAuth)

 Add session management and reward calculation

 Store pet state and progression

 Add narrative unlock logic

 Integrate push notifications
